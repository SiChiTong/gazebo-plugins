// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PuckDetectionResult.proto

#ifndef PROTOBUF_PuckDetectionResult_2eproto__INCLUDED
#define PROTOBUF_PuckDetectionResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Pose2D.pb.h"
// @@protoc_insertion_point(includes)

namespace llsf_msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PuckDetectionResult_2eproto();
void protobuf_AssignDesc_PuckDetectionResult_2eproto();
void protobuf_ShutdownFile_PuckDetectionResult_2eproto();

class PuckDetectionResult;

enum PuckDetectionResult_CompType {
  PuckDetectionResult_CompType_COMP_ID = 2000,
  PuckDetectionResult_CompType_MSG_TYPE = 301
};
bool PuckDetectionResult_CompType_IsValid(int value);
const PuckDetectionResult_CompType PuckDetectionResult_CompType_CompType_MIN = PuckDetectionResult_CompType_MSG_TYPE;
const PuckDetectionResult_CompType PuckDetectionResult_CompType_CompType_MAX = PuckDetectionResult_CompType_COMP_ID;
const int PuckDetectionResult_CompType_CompType_ARRAYSIZE = PuckDetectionResult_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PuckDetectionResult_CompType_descriptor();
inline const ::std::string& PuckDetectionResult_CompType_Name(PuckDetectionResult_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PuckDetectionResult_CompType_descriptor(), value);
}
inline bool PuckDetectionResult_CompType_Parse(
    const ::std::string& name, PuckDetectionResult_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PuckDetectionResult_CompType>(
    PuckDetectionResult_CompType_descriptor(), name, value);
}
// ===================================================================

class PuckDetectionResult : public ::google::protobuf::Message {
 public:
  PuckDetectionResult();
  virtual ~PuckDetectionResult();
  
  PuckDetectionResult(const PuckDetectionResult& from);
  
  inline PuckDetectionResult& operator=(const PuckDetectionResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PuckDetectionResult& default_instance();
  
  void Swap(PuckDetectionResult* other);
  
  // implements Message ----------------------------------------------
  
  PuckDetectionResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PuckDetectionResult& from);
  void MergeFrom(const PuckDetectionResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PuckDetectionResult_CompType CompType;
  static const CompType COMP_ID = PuckDetectionResult_CompType_COMP_ID;
  static const CompType MSG_TYPE = PuckDetectionResult_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return PuckDetectionResult_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    PuckDetectionResult_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    PuckDetectionResult_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    PuckDetectionResult_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return PuckDetectionResult_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return PuckDetectionResult_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return PuckDetectionResult_CompType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .llsf_msgs.Pose2D positions = 1;
  inline int positions_size() const;
  inline void clear_positions();
  static const int kPositionsFieldNumber = 1;
  inline const ::llsf_msgs::Pose2D& positions(int index) const;
  inline ::llsf_msgs::Pose2D* mutable_positions(int index);
  inline ::llsf_msgs::Pose2D* add_positions();
  inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Pose2D >&
      positions() const;
  inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Pose2D >*
      mutable_positions();
  
  // @@protoc_insertion_point(class_scope:llsf_msgs.PuckDetectionResult)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Pose2D > positions_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PuckDetectionResult_2eproto();
  friend void protobuf_AssignDesc_PuckDetectionResult_2eproto();
  friend void protobuf_ShutdownFile_PuckDetectionResult_2eproto();
  
  void InitAsDefaultInstance();
  static PuckDetectionResult* default_instance_;
};
// ===================================================================


// ===================================================================

// PuckDetectionResult

// repeated .llsf_msgs.Pose2D positions = 1;
inline int PuckDetectionResult::positions_size() const {
  return positions_.size();
}
inline void PuckDetectionResult::clear_positions() {
  positions_.Clear();
}
inline const ::llsf_msgs::Pose2D& PuckDetectionResult::positions(int index) const {
  return positions_.Get(index);
}
inline ::llsf_msgs::Pose2D* PuckDetectionResult::mutable_positions(int index) {
  return positions_.Mutable(index);
}
inline ::llsf_msgs::Pose2D* PuckDetectionResult::add_positions() {
  return positions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Pose2D >&
PuckDetectionResult::positions() const {
  return positions_;
}
inline ::google::protobuf::RepeatedPtrField< ::llsf_msgs::Pose2D >*
PuckDetectionResult::mutable_positions() {
  return &positions_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace llsf_msgs

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::llsf_msgs::PuckDetectionResult_CompType>() {
  return ::llsf_msgs::PuckDetectionResult_CompType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PuckDetectionResult_2eproto__INCLUDED
