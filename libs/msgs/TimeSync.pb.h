// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TimeSync.proto

#ifndef PROTOBUF_TimeSync_2eproto__INCLUDED
#define PROTOBUF_TimeSync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace gazsim_msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TimeSync_2eproto();
void protobuf_AssignDesc_TimeSync_2eproto();
void protobuf_ShutdownFile_TimeSync_2eproto();

class TimeSync;

enum TimeSync_CompType {
  TimeSync_CompType_COMP_ID = 2000,
  TimeSync_CompType_MSG_TYPE = 327
};
bool TimeSync_CompType_IsValid(int value);
const TimeSync_CompType TimeSync_CompType_CompType_MIN = TimeSync_CompType_MSG_TYPE;
const TimeSync_CompType TimeSync_CompType_CompType_MAX = TimeSync_CompType_COMP_ID;
const int TimeSync_CompType_CompType_ARRAYSIZE = TimeSync_CompType_CompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TimeSync_CompType_descriptor();
inline const ::std::string& TimeSync_CompType_Name(TimeSync_CompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimeSync_CompType_descriptor(), value);
}
inline bool TimeSync_CompType_Parse(
    const ::std::string& name, TimeSync_CompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeSync_CompType>(
    TimeSync_CompType_descriptor(), name, value);
}
// ===================================================================

class TimeSync : public ::google::protobuf::Message {
 public:
  TimeSync();
  virtual ~TimeSync();
  
  TimeSync(const TimeSync& from);
  
  inline TimeSync& operator=(const TimeSync& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeSync& default_instance();
  
  void Swap(TimeSync* other);
  
  // implements Message ----------------------------------------------
  
  TimeSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeSync& from);
  void MergeFrom(const TimeSync& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef TimeSync_CompType CompType;
  static const CompType COMP_ID = TimeSync_CompType_COMP_ID;
  static const CompType MSG_TYPE = TimeSync_CompType_MSG_TYPE;
  static inline bool CompType_IsValid(int value) {
    return TimeSync_CompType_IsValid(value);
  }
  static const CompType CompType_MIN =
    TimeSync_CompType_CompType_MIN;
  static const CompType CompType_MAX =
    TimeSync_CompType_CompType_MAX;
  static const int CompType_ARRAYSIZE =
    TimeSync_CompType_CompType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CompType_descriptor() {
    return TimeSync_CompType_descriptor();
  }
  static inline const ::std::string& CompType_Name(CompType value) {
    return TimeSync_CompType_Name(value);
  }
  static inline bool CompType_Parse(const ::std::string& name,
      CompType* value) {
    return TimeSync_CompType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required float sim_time = 1;
  inline bool has_sim_time() const;
  inline void clear_sim_time();
  static const int kSimTimeFieldNumber = 1;
  inline float sim_time() const;
  inline void set_sim_time(float value);
  
  // required float real_time_factor = 2;
  inline bool has_real_time_factor() const;
  inline void clear_real_time_factor();
  static const int kRealTimeFactorFieldNumber = 2;
  inline float real_time_factor() const;
  inline void set_real_time_factor(float value);
  
  // required bool paused = 3;
  inline bool has_paused() const;
  inline void clear_paused();
  static const int kPausedFieldNumber = 3;
  inline bool paused() const;
  inline void set_paused(bool value);
  
  // @@protoc_insertion_point(class_scope:gazsim_msgs.TimeSync)
 private:
  inline void set_has_sim_time();
  inline void clear_has_sim_time();
  inline void set_has_real_time_factor();
  inline void clear_has_real_time_factor();
  inline void set_has_paused();
  inline void clear_has_paused();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float sim_time_;
  float real_time_factor_;
  bool paused_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_TimeSync_2eproto();
  friend void protobuf_AssignDesc_TimeSync_2eproto();
  friend void protobuf_ShutdownFile_TimeSync_2eproto();
  
  void InitAsDefaultInstance();
  static TimeSync* default_instance_;
};
// ===================================================================


// ===================================================================

// TimeSync

// required float sim_time = 1;
inline bool TimeSync::has_sim_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeSync::set_has_sim_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeSync::clear_has_sim_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeSync::clear_sim_time() {
  sim_time_ = 0;
  clear_has_sim_time();
}
inline float TimeSync::sim_time() const {
  return sim_time_;
}
inline void TimeSync::set_sim_time(float value) {
  set_has_sim_time();
  sim_time_ = value;
}

// required float real_time_factor = 2;
inline bool TimeSync::has_real_time_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeSync::set_has_real_time_factor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeSync::clear_has_real_time_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeSync::clear_real_time_factor() {
  real_time_factor_ = 0;
  clear_has_real_time_factor();
}
inline float TimeSync::real_time_factor() const {
  return real_time_factor_;
}
inline void TimeSync::set_real_time_factor(float value) {
  set_has_real_time_factor();
  real_time_factor_ = value;
}

// required bool paused = 3;
inline bool TimeSync::has_paused() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeSync::set_has_paused() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeSync::clear_has_paused() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeSync::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
inline bool TimeSync::paused() const {
  return paused_;
}
inline void TimeSync::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gazsim_msgs

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gazsim_msgs::TimeSync_CompType>() {
  return ::gazsim_msgs::TimeSync_CompType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TimeSync_2eproto__INCLUDED
